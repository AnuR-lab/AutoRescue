AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'AutoRescue Flight Assistant - Lambda Functions with Dependencies'

Resources:
  # IAM Role for Search Flights Lambda
  SearchFlightsLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: SecretsManagerAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                Resource: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:autorescue/amadeus/credentials-*'
      Tags:
        - Key: Application
          Value: AutoRescue
        - Key: Component
          Value: Lambda

  # Search Flights Lambda Function
  SearchFlightsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: AutoRescue-SearchFlights
      Runtime: python3.13
      Handler: lambda_function.lambda_handler
      Role: !GetAtt SearchFlightsLambdaRole.Arn
      Timeout: 30
      MemorySize: 256
      CodeUri: lambda_functions/search_flights/
      Tags:
        Application: AutoRescue
        Component: Lambda

  # IAM Role for Offer Price Lambda
  OfferPriceLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: SecretsManagerAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                Resource: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:autorescue/amadeus/credentials-*'
      Tags:
        - Key: Application
          Value: AutoRescue
        - Key: Component
          Value: Lambda

  # Offer Price Lambda Function
  OfferPriceFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: AutoRescue-OfferPrice
      Runtime: python3.13
      Handler: lambda_function.lambda_handler
      Role: !GetAtt OfferPriceLambdaRole.Arn
      Timeout: 30
      MemorySize: 256
      CodeUri: lambda_functions/offer_price/
      Environment:
        Variables:
          AMADEUS_BASE_URL: https://test.api.amadeus.com
      Tags:
        Application: AutoRescue
        Component: Lambda

  # IAM Role for Book Flight Lambda
  BookFlightLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: SecretsManagerAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                Resource: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:autorescue/amadeus/credentials-*'
      Tags:
        - Key: Application
          Value: AutoRescue
        - Key: Component
          Value: Lambda

  # Book Flight Lambda Function
  BookFlightFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: AutoRescue-BookFlight
      Runtime: python3.13
      Handler: lambda_function.lambda_handler
      Role: !GetAtt BookFlightLambdaRole.Arn
      Timeout: 30
      MemorySize: 256
      CodeUri: lambda_functions/book_flight/
      Environment:
        Variables:
          AMADEUS_BASE_URL: https://test.api.amadeus.com
      Tags:
        Application: AutoRescue
        Component: Lambda

Outputs:
  SearchFlightsLambdaArn:
    Description: ARN of the Search Flights Lambda Function
    Value: !GetAtt SearchFlightsFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}-SearchFlightsArn'
  
  OfferPriceLambdaArn:
    Description: ARN of the Offer Price Lambda Function
    Value: !GetAtt OfferPriceFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}-OfferPriceArn'
  
  BookFlightLambdaArn:
    Description: ARN of the Book Flight Lambda Function
    Value: !GetAtt BookFlightFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}-BookFlightArn'
  
  SearchFlightsLambdaName:
    Description: Name of the Search Flights Lambda Function
    Value: !Ref SearchFlightsFunction
  
  OfferPriceLambdaName:
    Description: Name of the Offer Price Lambda Function
    Value: !Ref OfferPriceFunction
  
  BookFlightLambdaName:
    Description: Name of the Book Flight Lambda Function
    Value: !Ref BookFlightFunction
